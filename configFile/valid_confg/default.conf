      #define list of accepted http methods
#define http redirection 
#create a custom error page
#disable the content listing

     # choose the port and host of each server
# setup the server_namees
# setup error pages
# limit client body size
# a list of accepted http methods for the route
# dfine http request
# turn on or off directory listing
# execute cgi based on certain file extension
#  make the route able to accept uploadd files
# regular expressions are not accepted 
 server {
   #listen 127.0.0.1 8081
   listen 127.0.0.1 8081
   #listen 127.0.0.1 8081
   server_name ok.ma

   root /Users/iidzim/Desktop/webservairdrop/var/www/html
   # #root /Users/mac/Desktop/webservairdrop/var/www/html
   #  index index.html index.php

      error_page 404 /400.html
      error_page 500 /500.html
      rewrite path.html pwd.http
    
    location something {
       #listen 127.0.0.1 8081
     #allow_methods DELETE POST
      rewrite testLocation.html pwd.http
      root test
   }

 }

 server {
   #listen 127.0.0.1 8080
   server_name myWebsite.com
   autoindex on
   #autoindex on

   # root /Users/iidzim/Desktop/webservairdrop/var/www/html
  #  root /Users/mac/Desktop/webservairdrop/var/www/html

    #server_name website.com
    client_max_body_size 100
    

   location some {
      #server_name test pwd
      #client_max_body_size 100
      index index.html pls
      allow_methods DELETE
      root test/
      error_page 500 /500.html
      error_page 500 /500.html
   }
}
# the server name is set to an empty string that will match requests without the “Host” header field, and a special nginx’s non-standard code 444 is returned that closes the connection.
#server {
 #   listen 127.0.0.1 80
    #server_name zmer;
   # return      444;
# }

# could have multiple server blocks

#enable the nginx directory listing
#context {location, server} => autoindex on; // or off
